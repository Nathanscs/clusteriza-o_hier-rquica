# -*- coding: utf-8 -*-
"""exemplo-clusterização-hierárquica.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e_s-Eo36UDboioMIDB6WpemZvT_jolh1

TAREFA Algoritmo de Clusterização Hierárquica

**Importanto Bibliotecas:** 
Utilizaremos as bibliotecas de acesso a dados numpy e pandas
"""

import numpy as np
import pandas as pd

"""Carregando o conjunto de pontos..."""

url = f"https://raw.githubusercontent.com/AndersonChaves/data-science-classes/main/datasets/pokemon.csv"
!wget --no-cache --backups=1 {url}
ds = pd.read_csv("pokemon.csv", header=0)
ds.head()

"""Selecionamos as colunas pelas quais iremos clusterizar, e os rótulos de cada ponto:"""

# Clusterizando por peso e velocidade
x, y = ds['attack'], ds['defense'], 
data = list(zip(x, y))

# Atribuindo rótulos
name = ds['name']
str_name = [str(n) for n in name]

"""**Visualizando alguns exemplos do conjunto de pontos:**"""

import matplotlib.pyplot as plt
import matplotlib.pyplot as plt
plt.rcParams.update({'font.size': 2})

# Plota os pontos
plt.scatter(x[:100], y[:100]);

# Plota os rótulos
for i, txt in enumerate(name[:50]):
    plt.annotate(txt, (x[i], y[i]))

#fig, ax = plt.subplots()    
plt.show()

"""Etapa de Clusterização:"""

# Para visualização
from matplotlib.pyplot import figure

# Para a clusterização
from scipy.cluster.hierarchy import dendrogram, linkage

figure(figsize=(18, 6), dpi=80)
linkage_data = linkage(data[:500], method='ward', metric='euclidean')
dendrogram(linkage_data, labels=str_name[:500])

plt.show()

"""A biblioteca SciKitLearn também nos ofere implementação da clusterização hierárquica. Podemos utilizá-a para visualizar a clusterização com o número de grupos escolhido no gráfico:"""

from sklearn.cluster import AgglomerativeClustering
import matplotlib.pyplot as plt
plt.rcParams.update({'font.size': 2})

hierarchical_cluster = AgglomerativeClustering(n_clusters=3, affinity='euclidean', linkage='ward')
labels = hierarchical_cluster.fit_predict(data[:10])

plt.scatter(x[:10], y[:10], c=labels)

# Plota os rótulos
for i, txt in enumerate(name[:50]):
    plt.annotate(txt, (x[i], y[i]))

plt.show()

"""Exercícios: 

1) Efetue a clusterização com os primeiros 50 elementos do conjunto de dados. Surgiram grupos novos? E com 500?

2) Efetue a clusterização pelas colunas "attack" e "defense". Houve alteração nos grupos identificados?

3) Utilizando o atributo "type", efetue a mesma clusterização apenas para elementos do mesmo subgrupos. Há algum padrão a ser identificado?"""

import numpy as np
import pandas as pd

url = f"https://raw.githubusercontent.com/AndersonChaves/data-science-classes/main/datasets/pokemon.csv"
!wget --no-cache --backups=1 {url}
ds = pd.read_csv("pokemon.csv", header=0)
ds.head()

# Clusterizando por peso e velocidade
x, y = ds['attack'], ds['defense'], 
data = list(zip(x, y))

# Atribuindo rótulos
name = ds['name']
str_name = [str(n) for n in name]


import matplotlib.pyplot as plt
import matplotlib.pyplot as plt
plt.rcParams.update({'font.size': 2})

# Plota os pontos
plt.scatter(x[:100], y[:100]);

# Plota os rótulos
for i, txt in enumerate(name[:50]):
    plt.annotate(txt, (x[i], y[i]))

#fig, ax = plt.subplots()    
plt.show()

# Para visualização
from matplotlib.pyplot import figure

# Para a clusterização
from scipy.cluster.hierarchy import dendrogram, linkage

figure(figsize=(18, 6), dpi=80)
linkage_data = linkage(data[:500], method='ward', metric='euclidean')
dendrogram(linkage_data, labels=str_name[:500])

plt.show()

a=ds[(ds.type1=="fire")]
a.head
plt.scatter(x[:100], y[:100]);
for i, txt in enumerate(name[:50]):
    plt.annotate(txt, (x[i], y[i]))
plt.show()